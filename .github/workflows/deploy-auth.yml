# This workflow will build a docker container, publish it to Google Container Registry, and deploy it to GKE when there is a push to the "main" branch.
#
# To configure this workflow:
#
# 1. Ensure that your repository contains the necessary configuration for your Google Kubernetes Engine cluster, including deployment.yml, kustomization.yml, service.yml, etc.
#
# 2. Create and configure a Workload Identity Provider for GitHub (https://github.com/google-github-actions/auth#setting-up-workload-identity-federation)
#
# 3. Change the values for the GAR_LOCATION, GKE_ZONE, GKE_CLUSTER, IMAGE, REPOSITORY and DEPLOYMENT_NAME environment variables (below).
#
# For more support on how to run the workflow, please visit https://github.com/google-github-actions/setup-gcloud/tree/master/example-workflows/gke-kustomize

name: Build and Deploy to GKE

on:
  push:
    branches: ["main"]
    # paths: ["auth/**"]

env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  GAR_LOCATION: asia-southeast2
  GKE_CLUSTER: ticket-dev-sea1c
  GKE_ZONE: asia-southeast1-c
  DEPLOYMENT_NAME: gke-test
  REPOSITORY: ticket-artifacts
  IMAGE: auth

jobs:
  setup-build-publish-deploy:
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup gcloud CLI
        uses: google-github-actions/setup-gcloud@v0
        with:
          service_account_key: ${{ secrets.GKE_SA_KEY }}
          project_id: ${{ secrets.GKE_PROJECT }}
          export_default_credentials: true
          install_components: 'gke-gcloud-auth-plugin'

      - name: Build and push docker image
        env:
          GOOGLE_PROJECT: ${{ secrets.GKE_PROJECT }}
        run: |-
          gcloud auth configure-docker asia-southeast2-docker.pkg.dev
          docker build -t asia-southeast2-docker.pkg.dev/$GOOGLE_PROJECT/ticket-artifacts/auth:latest ./auth
          docker push asia-southeast2-docker.pkg.dev/$GOOGLE_PROJECT/ticket-artifacts/auth:latest

      - name: deploy to GKE
        run: |-
          gcloud container clusters get-credentials $GKE_CLUSTER --region $GKE_ZONE
          kubectl apply -f ./infra/k8s/auth-mongo-depl.yaml
          kubectl apply -f ./infra/k8s/auth-depl.yaml
      
